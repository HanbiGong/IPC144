///////////////////////////////////////////////////////////////////////////
                               Reflection
                             Workshop - #5
Full Name  : Hanbi Gong
Student ID#: 111932224

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. Why do we try to use variables and macros to represent information rather than hardcode “magic” numbers (constant literals)? Using the details of this workshop, describe at least three advantages this provides us?
 Firstly, Readability: The macro using the meaningful name can be understanding well. For example, if I put the number only (ex-1,10,20, 100..etc), it is hard to find out what is this number for. Instead of this, it is better to understand by using clear name (MIN_YEAR, MAX_YEAR…etc).
 Second, Maintainability: If I want to change the number inside the code, just change the number used macro.
In this code, the January is designated as 1. However, if I want to change the January as 2, I just revise the January variables as 2.
 Third, Error Prevention: It has a possibility to mistype the different number. So, it reduces the risk of to put the wrong input.

2. The rating values entered by the user required iteration to perform basic validations with each iteration concentrated on testing for values to be within a specific range. Why do we not include additional logic that sums and performs the average? Instead, the sum and average logic is placed outside of any validation routine. Briefly explain two reasons why this is better design and refer to the details of this workshop to justify your answer.

 Firstly, separating from variable declaration: do-while functions are used to check only whether the output result meets the standard. If the sums and average logic add within the function, the unnecessary steps are needed in additional. However, sum and average are arithmetic parts, and it is easier to separate the contents when revised later.
 Second, Probability of error: including the sum and average in the validation loop may result in these calculations showing invalid or incomplete data. This can provide users with inaccurate results and confusing error messages.